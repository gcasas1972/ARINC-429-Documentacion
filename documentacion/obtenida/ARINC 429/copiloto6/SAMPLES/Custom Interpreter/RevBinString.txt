'	RevBinString.txt: COPILOT CUSTOM INTERPRETER SCRIPT SAMPLE
'
'	Copyright 2002
'       
'	Ballard Technology, Inc.
'	(800) 829-1553
'	www.ballardtech.com
'	support@ballardtech.com
'
'	NOTES:
'		Each script block below is labeled with the intended Custom 
'		Interpreter script tab. Overwrite the text in the script tab 
'		with the appropriate script block from the text below.

'		Global variables and helper functions may be defined on any 
'		of the Custom Interpreter script tabs. All functions and 
'		global variables can be called/used from any of the Custom 
'		Interpreter script tabs.
'
'	DESCRIPTION:
'		CoPilot interpreter definition outputs a reversed binary string
'               for the start and end bits specified in the ValueToString function.
'
 
'********************************
'*	Value --> Double        *
'********************************

Function ValueToDouble( inValue )
 
	ValueToDouble = CDbl(inValue)
 
	'Check if above max
	If ValueToDouble > Script.RangeMax Then
		ValueToDouble = Script.RangeMax
	End If
 
	'Check if below min
	If ValueToDouble < Script.RangeMin Then
		ValueToDouble = Script.RangeMin
	End If
End Function

'********************************
'*	Double --> Value        *
'********************************

Function DoubleToValue( inDouble )
	'Check if above max
	If inDouble > Script.RangeMax Then
		inDouble = Script.RangeMax
	End If
 
	'Check if below min
	If inDouble < Script.RangeMin Then
		inDouble = Script.RangeMin
	End If
 
	DoubleToValue = CLng(inDouble)
End Function

'********************************
'*	Value --> String        *
'********************************

Function ValueToString( inValue )
 Dim StartBit
 Dim EndBit
 
 StartBit = 9 - 8 'inValue starts at bit 9... after 8 label bits
 EndBit = 16 - 8  'inValue starts at bit 9... after 8 label bits
 
 ValueToString = Cstr(RevBinStr(inValue,StartBit,EndBit)) 
End Function
 
Function RevBinStr(InNumber,bitStart,bitEnd) 
 If InNumber=0 Then
  RevBinStr = "NULL"
 End If
 
 'Align to start bit
 If bitStart > 1 Then 
  InNumber = CLng( Int(InNumber / (2*(bitStart-1))) )
 End If
 
 Dim curBit
 curBit = bitStart
 
    'Process string
    While InNumber And (curBit <=bitEnd)
        If InNumber And 1 Then 
            RevBinStr = RevBinStr & "1"
        Else 
            RevBinStr = RevBinStr & "0"
        End If 
 
        'Right Shift by 1... or Divide by 2 
        InNumber = CLng( Int(InNumber / 2) )
        curBit = curBit + 1
    Wend 
End Function 


'********************************
'*	String --> Value        *
'********************************

Function StringToValue( inString)
	'Type cast the input value using the Double-To-Value Conversion
	StringToValue = DoubleToValue( CDbl(inString) )
End Function
